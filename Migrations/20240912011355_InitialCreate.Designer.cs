// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RareAPI_BE;

#nullable disable

namespace RareAPI_BE.Migrations
{
    [DbContext(typeof(RareAPI_BEDbContext))]
<<<<<<<< HEAD:Migrations/20240911234840_InitialCreate.Designer.cs
    [Migration("20240911234840_InitialCreate")]
========
    [Migration("20240912011355_InitialCreate")]
>>>>>>>> main:Migrations/20240912011355_InitialCreate.Designer.cs
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RareAPI_BE.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Great insights, Jon!",
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Loved the music recommendations!",
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Can't wait to visit Europe!",
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Content = "This makes me so hungry!",
                            PostId = 4,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("RareAPI_BE.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "A deep dive into upcoming technology trends.",
                            ImageUrl = "https://thehill.com/wp-content/uploads/sites/2/2018/05/robot_051018gn.jpg?w=960&h=540&crop=1",
                            Title = "Tech Trends 2024",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Top 10 indie albums you must listen to in 2024.",
                            ImageUrl = "https://preview.redd.it/whats-the-weirdest-album-cover-youve-ever-seen-v0-l2sre3xg799b1.jpeg?width=1242&format=pjpg&auto=webp&s=d7562fd2e4fb7cb3ce5c850f64754b373f6be07c",
                            Title = "Best Indie Albums",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "A guide to budget-friendly travels across Europe.",
                            ImageUrl = "https://i.cbc.ca/1.6729582.1674911696!/cumulusImage/httpImage/image.jpg_gen/derivatives/16x9_780/kitchener-homeless-encampment-victoria-and-weber-streets.jpg",
                            Title = "Exploring Europe",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Best new food product!",
                            ImageUrl = "https://gaianism.org/wp-content/uploads/2022/02/soylent-green-new-packaging1.png",
                            Title = "Gourmet Delights",
                            UserId = 4
                        });
                });

            modelBuilder.Entity("RareAPI_BE.Models.PostTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PostId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 5,
                            PostId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 2,
                            PostId = 2,
                            TagId = 2
                        },
                        new
                        {
                            Id = 6,
                            PostId = 2,
                            TagId = 6
                        },
                        new
                        {
                            Id = 3,
                            PostId = 3,
                            TagId = 4
                        },
                        new
                        {
                            Id = 4,
                            PostId = 4,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("RareAPI_BE.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lifestyle"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Health"
                        });
                });

            modelBuilder.Entity("RareAPI_BE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "The Pilsbury doughboy ain't got shit on me",
                            Email = "DoughMon@gmail.com",
                            ImageUrl = "https://images.playground.com/7344181b53c14f018042ea2a7ec1cc3e.jpeg",
                            Uid = "",
                            UserName = "JonDough"
                        },
                        new
                        {
                            Id = 2,
                            Bio = "If bitches get stitches, what do good boys get?",
                            Email = "Mrthincrisp@gmail.com",
                            ImageUrl = "",
                            Uid = "xkZcuwDM5hXjHreMiKgs9AHVlcX2",
                            UserName = "Mrthincrisp"
                        },
                        new
                        {
                            Id = 3,
                            Bio = "Music is my life",
                            Email = "ross.morgan933@gmail.com",
                            ImageUrl = "",
                            Uid = "foSJhCcjadNP0TsmghEFzOt2GgX2",
                            UserName = "RossMorgan"
                        },
                        new
                        {
                            Id = 4,
                            Bio = "Traveler, blogger, coffee lover",
                            Email = "aspurlock@coding.com",
                            ImageUrl = "",
                            Uid = "Firebase_Key",
                            UserName = "AndrewSpurlock"
                        },
                        new
                        {
                            Id = 5,
                            Bio = "Tech geek with a passion for AI",
                            Email = "ChrisTechy@gmail.com",
                            ImageUrl = "https://www.southernliving.com/thmb/cxeGxYshY26hzmi5TToGS3oTraQ=/750x0/filters:no_upscale():max_bytes(150000):strip_icc():format(webp)/Lowes-Exterior-2000-9577c2caf665407083589a6cb2747301.jpg",
                            Uid = "",
                            UserName = "ChrisLowe"
                        });
                });

            modelBuilder.Entity("RareAPI_BE.Models.Comment", b =>
                {
                    b.HasOne("RareAPI_BE.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RareAPI_BE.Models.User", "User")
                        .WithMany("Comment")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RareAPI_BE.Models.Post", b =>
                {
                    b.HasOne("RareAPI_BE.Models.User", "User")
                        .WithMany("Post")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RareAPI_BE.Models.PostTag", b =>
                {
                    b.HasOne("RareAPI_BE.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RareAPI_BE.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("RareAPI_BE.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("RareAPI_BE.Models.Tag", b =>
                {
                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("RareAPI_BE.Models.User", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
